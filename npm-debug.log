0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'publish' ]
2 info using npm@1.2.18
3 info using node@v0.10.4
4 verbose node symlink /usr/bin/node
5 verbose publish [ '.' ]
6 verbose read json /home/alexander/development/prometheus/package.json
7 verbose cache add [ '.', null ]
8 verbose cache add name=undefined spec="." args=[".",null]
9 verbose parsed url { protocol: null,
9 verbose parsed url   slashes: null,
9 verbose parsed url   auth: null,
9 verbose parsed url   host: null,
9 verbose parsed url   port: null,
9 verbose parsed url   hostname: null,
9 verbose parsed url   hash: null,
9 verbose parsed url   search: null,
9 verbose parsed url   query: null,
9 verbose parsed url   pathname: '.',
9 verbose parsed url   path: '.',
9 verbose parsed url   href: '.' }
10 silly lockFile 3a52ce78- .
11 verbose lock . /home/alexander/.npm/3a52ce78-.lock
12 verbose read json package.json
13 verbose tar pack [ '/home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/tmp.tgz',
13 verbose tar pack   '.' ]
14 verbose tarball /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/tmp.tgz
15 verbose folder .
16 info prepublish prometheus@0.0.2
17 silly lockFile 3a52ce78- .
18 verbose lock . /home/alexander/.npm/3a52ce78-.lock
19 silly lockFile eaf3f4cb-8255-0-27637532888911664-tmp-tgz /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/tmp.tgz
20 verbose lock /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/tmp.tgz /home/alexander/.npm/eaf3f4cb-8255-0-27637532888911664-tmp-tgz.lock
21 silly lockFile 3a52ce78- .
22 silly lockFile 3a52ce78- .
23 silly lockFile eaf3f4cb-8255-0-27637532888911664-tmp-tgz /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/tmp.tgz
24 silly lockFile eaf3f4cb-8255-0-27637532888911664-tmp-tgz /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/tmp.tgz
25 verbose tar unpack /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/tmp.tgz
26 silly lockFile 713f3a85-8255-0-27637532888911664-package /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/package
27 verbose lock /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/package /home/alexander/.npm/713f3a85-8255-0-27637532888911664-package.lock
28 silly lockFile eaf3f4cb-8255-0-27637532888911664-tmp-tgz /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/tmp.tgz
29 verbose lock /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/tmp.tgz /home/alexander/.npm/eaf3f4cb-8255-0-27637532888911664-tmp-tgz.lock
30 silly gunzTarPerm modes [ '755', '644' ]
31 silly gunzTarPerm extractEntry package.json
32 silly gunzTarPerm modified mode [ 'package.json', 436, 420 ]
33 silly gunzTarPerm extractEntry README.md
34 silly gunzTarPerm modified mode [ 'README.md', 436, 420 ]
35 silly gunzTarPerm extractEntry examples/_user_model.js
36 silly gunzTarPerm modified mode [ 'examples/_user_model.js', 436, 420 ]
37 silly gunzTarPerm extractEntry examples/user.js
38 silly gunzTarPerm modified mode [ 'examples/user.js', 436, 420 ]
39 silly gunzTarPerm extractEntry examples/mixins/log.js
40 silly gunzTarPerm modified mode [ 'examples/mixins/log.js', 436, 420 ]
41 silly gunzTarPerm extractEntry lib/index.js
42 silly gunzTarPerm modified mode [ 'lib/index.js', 436, 420 ]
43 silly gunzTarPerm extractEntry lib/model_factory.js
44 silly gunzTarPerm modified mode [ 'lib/model_factory.js', 436, 420 ]
45 silly gunzTarPerm extractEntry lib/helpers/form_builder.js
46 silly gunzTarPerm modified mode [ 'lib/helpers/form_builder.js', 436, 420 ]
47 silly gunzTarPerm extractEntry lib/helpers/form_parser.js
48 silly gunzTarPerm modified mode [ 'lib/helpers/form_parser.js', 436, 420 ]
49 silly gunzTarPerm extractEntry lib/helpers/image_resizer.js
50 silly gunzTarPerm modified mode [ 'lib/helpers/image_resizer.js', 436, 420 ]
51 silly gunzTarPerm extractEntry lib/helpers/table_builder.js
52 silly gunzTarPerm modified mode [ 'lib/helpers/table_builder.js', 436, 420 ]
53 silly gunzTarPerm extractEntry lib/helpers/uploader.js
54 silly gunzTarPerm modified mode [ 'lib/helpers/uploader.js', 436, 420 ]
55 silly gunzTarPerm extractEntry lib/helpers/validators.js
56 silly gunzTarPerm modified mode [ 'lib/helpers/validators.js', 436, 420 ]
57 silly gunzTarPerm extractEntry lib/includes/datatypes.js
58 silly gunzTarPerm modified mode [ 'lib/includes/datatypes.js', 436, 420 ]
59 silly gunzTarPerm extractEntry lib/stores/mongodb.js
60 silly gunzTarPerm modified mode [ 'lib/stores/mongodb.js', 436, 420 ]
61 verbose read json /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/package/package.json
62 silly lockFile 713f3a85-8255-0-27637532888911664-package /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/package
63 silly lockFile 713f3a85-8255-0-27637532888911664-package /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/package
64 silly lockFile eaf3f4cb-8255-0-27637532888911664-tmp-tgz /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/tmp.tgz
65 silly lockFile eaf3f4cb-8255-0-27637532888911664-tmp-tgz /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/tmp.tgz
66 verbose from cache /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/package/package.json
67 verbose tar pack [ '/home/alexander/.npm/prometheus/0.0.2/package.tgz',
67 verbose tar pack   '/home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/package' ]
68 verbose tarball /home/alexander/.npm/prometheus/0.0.2/package.tgz
69 verbose folder /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/package
70 silly lockFile 713f3a85-8255-0-27637532888911664-package /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/package
71 verbose lock /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/package /home/alexander/.npm/713f3a85-8255-0-27637532888911664-package.lock
72 silly lockFile 41f841e9-npm-prometheus-0-0-2-package-tgz /home/alexander/.npm/prometheus/0.0.2/package.tgz
73 verbose lock /home/alexander/.npm/prometheus/0.0.2/package.tgz /home/alexander/.npm/41f841e9-npm-prometheus-0-0-2-package-tgz.lock
74 silly lockFile 713f3a85-8255-0-27637532888911664-package /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/package
75 silly lockFile 713f3a85-8255-0-27637532888911664-package /home/alexander/tmp/npm-9339/1370537958255-0.27637532888911664/package
76 silly lockFile 41f841e9-npm-prometheus-0-0-2-package-tgz /home/alexander/.npm/prometheus/0.0.2/package.tgz
77 silly lockFile 41f841e9-npm-prometheus-0-0-2-package-tgz /home/alexander/.npm/prometheus/0.0.2/package.tgz
78 silly lockFile ec84995b-der-npm-prometheus-0-0-2-package /home/alexander/.npm/prometheus/0.0.2/package
79 verbose lock /home/alexander/.npm/prometheus/0.0.2/package /home/alexander/.npm/ec84995b-der-npm-prometheus-0-0-2-package.lock
80 silly lockFile ec84995b-der-npm-prometheus-0-0-2-package /home/alexander/.npm/prometheus/0.0.2/package
81 silly lockFile ec84995b-der-npm-prometheus-0-0-2-package /home/alexander/.npm/prometheus/0.0.2/package
82 verbose tar unpack /home/alexander/.npm/prometheus/0.0.2/package.tgz
83 silly lockFile ec84995b-der-npm-prometheus-0-0-2-package /home/alexander/.npm/prometheus/0.0.2/package
84 verbose lock /home/alexander/.npm/prometheus/0.0.2/package /home/alexander/.npm/ec84995b-der-npm-prometheus-0-0-2-package.lock
85 silly lockFile 41f841e9-npm-prometheus-0-0-2-package-tgz /home/alexander/.npm/prometheus/0.0.2/package.tgz
86 verbose lock /home/alexander/.npm/prometheus/0.0.2/package.tgz /home/alexander/.npm/41f841e9-npm-prometheus-0-0-2-package-tgz.lock
87 silly gunzTarPerm modes [ '755', '644' ]
88 silly gunzTarPerm extractEntry package.json
89 silly gunzTarPerm extractEntry README.md
90 silly gunzTarPerm extractEntry examples/_user_model.js
91 silly gunzTarPerm extractEntry examples/user.js
92 silly gunzTarPerm extractEntry examples/mixins/log.js
93 silly gunzTarPerm extractEntry lib/index.js
94 silly gunzTarPerm extractEntry lib/model_factory.js
95 silly gunzTarPerm extractEntry lib/helpers/form_builder.js
96 silly gunzTarPerm extractEntry lib/helpers/form_parser.js
97 silly gunzTarPerm extractEntry lib/helpers/image_resizer.js
98 silly gunzTarPerm extractEntry lib/helpers/table_builder.js
99 silly gunzTarPerm extractEntry lib/helpers/uploader.js
100 silly gunzTarPerm extractEntry lib/helpers/validators.js
101 silly gunzTarPerm extractEntry lib/includes/datatypes.js
102 silly gunzTarPerm extractEntry lib/stores/mongodb.js
103 verbose read json /home/alexander/.npm/prometheus/0.0.2/package/package.json
104 silly lockFile ec84995b-der-npm-prometheus-0-0-2-package /home/alexander/.npm/prometheus/0.0.2/package
105 silly lockFile ec84995b-der-npm-prometheus-0-0-2-package /home/alexander/.npm/prometheus/0.0.2/package
106 silly lockFile 41f841e9-npm-prometheus-0-0-2-package-tgz /home/alexander/.npm/prometheus/0.0.2/package.tgz
107 silly lockFile 41f841e9-npm-prometheus-0-0-2-package-tgz /home/alexander/.npm/prometheus/0.0.2/package.tgz
108 silly shasum updated bytes 13973
109 info shasum 6eb1b95afa8ccd2998eeeb01af26bc627ab646f6
109 info shasum /home/alexander/.npm/prometheus/0.0.2/package.tgz
110 verbose from cache /home/alexander/.npm/prometheus/0.0.2/package/package.json
111 verbose chmod /home/alexander/.npm/prometheus/0.0.2/package.tgz 644
112 verbose chown /home/alexander/.npm/prometheus/0.0.2/package.tgz [ 0, 0 ]
113 silly lockFile 3a52ce78- .
114 silly publish { author: { name: 'Alexander Farennikov', email: 'farennikov@gmail.com' },
114 silly publish   name: 'prometheus',
114 silly publish   description: 'Simple ORM for Node.js with pluggable adapters',
114 silly publish   keywords:
114 silly publish    [ 'ORM',
114 silly publish      'object relational mapping',
114 silly publish      'prometheus',
114 silly publish      'adapter',
114 silly publish      'mongodb' ],
114 silly publish   homepage: 'https://github.com/shubik/prometheus',
114 silly publish   license: 'MIT',
114 silly publish   contributors: [],
114 silly publish   version: '0.0.2',
114 silly publish   repository: { type: 'git', url: 'https://github.com/shubik/prometheus' },
114 silly publish   bugs: { url: 'https://github.com/shubik/prometheus/issues' },
114 silly publish   main: './lib/index.js',
114 silly publish   scripts: {},
114 silly publish   engines: { node: '>= 0.4.0' },
114 silly publish   dependencies:
114 silly publish    { underscore: '~1.4.4',
114 silly publish      deferred: '~0.6.1',
114 silly publish      mongodb: '~1.2.14',
114 silly publish      MD5: '~1.0.3' },
114 silly publish   devDependencies: {},
114 silly publish   readme: 'Prometheus\n==========\n\nPrometheus is a simple ORM for Node.js with adapter for MongoDB.\n\nBecause of async nature of database calls, Prometheus\' model constructor always returns a promise (we prefer [Deferred](https://github.com/medikoo/deferred) library), not a model. This promise resolves with model once it is created (e.g. for a blank model, `var user = new UserModel()`), or once it is loaded from database (e.g. if you provide model id, `var user = new UserModel(123)`) or `null` if model was not found.\n\n## Defining models:\n\nYou define model by passing model-specific options to ModelFactory, which returns a model constructor.\n\n### Required params\n\n*   `name` — Name of your model, e.g. `UserModel`\n*   `schema` — Description of model attributes\n\n### Optional params\n\n*   `mixins` — An array with mixins that will be applied to constructor\'s prototype\n*   `prototype_methods` — Model-specific methods that will be added to constructor\'s prototype\n*   `static_methods` — Model-specific static methods that will be added to constructor\n*   `hooks` — Model-specific hooks (callbacks) that will be called during model lifecycle, e.g. `afterInitialize`, `beforeSave` etc.\n\n## Defining a model\n\n```javascript\nvar prometheus    = require(\'prometheus\'),\n    ModelFactory  = prometheus.factory,\n    MongodbStore  = prometheus.stores.mongodb,\n    Validators    = prometheus.validators,\n    MD5           = prometheus.MD5,\n    UserModel,\n    model_options;\n\nmodel_options = {\n\n    name: \'ExampleModel\',\n\n    store: new MongodbStore({\n        collection: \'example\'\n    }),\n\n    schema: {\n        name: {\n            name: \'Name\',\n            default: \'\',\n            type: ModelFactory.types.STRING\n        },\n        email: {\n            name: \'Email\',\n            default: \'\',\n            type: ModelFactory.types.STRING,\n            validate: Validators.isEmail,\n            unique: true\n        },\n        password: {\n            name: \'Password\',\n            default: \'\',\n            type: ModelFactory.types.STRING,\n            hidden: true\n        }\n    },\n\n    mixins: [],\n\n    prototype_methods: {},\n\n    static_methods: {\n        login: function(req, options) {\n            // your login logic\n        },\n\n        logout: function(req) {\n            // your logout logic\n        }\n    },\n\n    hooks: {\n        beforeSave: function() {\n            var password = this.get(\'password\');\n\n            if (password.length !== 32) {\n                this.set(\'password\', MD5(password));\n            }\n\n            this.set(\'updated_at\', utils.now());\n        }\n    }\n}\n\nUserModel = module.exports = ModelFactory(model_options);\n```\n\n## Instantiating models\n\nBlank model is instantiated by calling a model constructor without arguments:\n\n```javascript\nvar user = new UserModel();\n\nuser(function(model) {\n    model.set({\n        name: \'Shubik\',\n        email: \'farennikov@gmail.com\',\n        password: \'password\'\n    });\n\n    model.save()(function(model) {\n        // model successfully saved\n    }, function(err) {\n        // handle error\n    });\n}, function(err) {\n    // handle error\n});\n```\n\nExisting model is instantiated with model id as argument:\n\n```javascript\nvar user = new UserModel(123);\n\nuser(function(model) {\n    if (model === null) {\n        // model with id 123 was not found\n    } else {\n        var new_name = model.get(\'name\') + \' updated\';\n        model.set(\'name\', new_name);\n        model.save();\n    }\n}, function(err) {\n    // handle error\n});\n```\n\nNote that if model with such id is not found, promise will resolve with `null`.\n\n## Model API\n\n__Instance methods__\n\n### model.get()\n\n`get(attr)` retrieves an attribute of the model, or an entire model if attribute name is not provided.\n\n### model.set()\n\n`set(attr, [value])` sssigns new value to an attribute or a number of attributes of the model. If given only 1 param which is an Object, method will use keys of the object as attributes.\n\n### model.save()\n\n`save()` saves a new model or model that has been changed by `set()`. Returns a promise which is resolved with model if model was successfully saved or error if saving model failed. If model was initialized without an id, new model will be attempted to be created.\n\n### model.destroy()\n\n`destroy()` deletes model from a store. Returns a promise which is resolved with this model once model is deleted from database.\n\n### model.keys()\n\n`keys()` returns attribute names of this model.\n\n### model.toJSON()\n\n`toJSON()` returns all attributes of the model (key-value pairs).\n\n### model.validate()\n\n`validate()` validates model attributes according to the model\'s schema. Returns true or false.\n\n### model.toForm()\n\n`toForm()` returns an object that can be used to create HTML form for this model.\n\n### model.parseForm()\n\n`parseForm(req)` populates a model by values from a request.\n\n### model.toTable()\n\n`toTable()` returns an object that can be used to show this model in table form.\n\nYou can add model-specific instance methods by adding them to `prototype_methods` param of the options you pass to `ModelFactory`.\n\n__Static methods__\n\nModel constructors can have static methods which you can use without instantiating a model. By default there are two static methods: `find()` and `count()`:\n\n### SomeModel.find()\n\n`find(query, offset, limit, sort)` returns a promise which is resolved with an array of models found in database using provided arguments. Example:\n\n```javascript\nUserModel.find({ name: \'Shubik\' })(function(results) {\n    // do somethig with `results`\n});\n```\n\n### SomeModel.count()\n\n`count()` returns a promise which is resolved with number of all models in the database. Example:\n\n```javascript\nUserModel.count()(function(num) {\n    // do somethig with `num`\n});\n```\n\nYou can add more model-specific static methods to `static_methods` param of the options you pass to `ModelFactory`.\n\n# Changelog\n\n## v.0.0.2\n\n*   Refactored image uploader\n*   Added image resizer. Note that image resizer needs __imagemagick__ to be installed.',
114 silly publish   readmeFilename: 'README.md',
114 silly publish   _id: 'prometheus@0.0.2',
114 silly publish   dist: { shasum: '6eb1b95afa8ccd2998eeeb01af26bc627ab646f6' },
114 silly publish   _from: '.' }
115 verbose url raw prometheus
116 verbose url resolving [ 'https://registry.npmjs.org/', './prometheus' ]
117 verbose url resolved https://registry.npmjs.org/prometheus
118 error publish Failed PUT response undefined
119 error Error: getaddrinfo EADDRINFO
119 error     at errnoException (dns.js:37:11)
119 error     at Object.onanswer [as oncomplete] (dns.js:124:16)
120 error If you need help, you may report this log at:
120 error     <http://github.com/isaacs/npm/issues>
120 error or email it to:
120 error     <npm-@googlegroups.com>
121 error System Linux 3.8.0-23-generic
122 error command "/usr/bin/node" "/usr/bin/npm" "publish"
123 error cwd /home/alexander/development/prometheus
124 error node -v v0.10.4
125 error npm -v 1.2.18
126 error syscall getaddrinfo
127 error code EADDRINFO
128 error errno EADDRINFO
129 verbose exit [ 1, true ]
